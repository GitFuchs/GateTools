#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys
import numpy as np
import phsp
import click
import os
from matplotlib import pyplot as plt

CONTEXT_SETTINGS = dict(help_option_names=['-h', '--help'])
@click.command(context_settings=CONTEXT_SETTINGS)
@click.argument('filename')
@click.option('-n', default=float(-1), help='Use -1 to read all data')
@click.option('--key', '-k', multiple=True, help='Plot the given keys')
@click.option('--quantile', '-q', default=float(0), help='Restrict histogram to quantile')
@click.option('--nb_bins', '-b',
              default=int(100),
              help='Number of bins')
def phsp_plot(filename, key, n, quantile, nb_bins):
    '''
    \b
    Plot histograms

    \b
    <INPUT_FILENAME> : input PHSP root/pny file
    '''

    # load data
    data, read_keys, m = phsp.load(filename, n)

    # get keys
    keys = key
    if len(key) == 0:
        keys = read_keys

    # compute fig row/col
    nrow, ncol = phsp.fig_get_nb_row_col(len(keys))
    
    # create fig
    f, ax = plt.subplots(nrow, ncol, figsize=(25,10))

    # loop
    i = 0
    for k in keys:
        a = phsp.fig_get_sub_fig(ax,i)
        index = read_keys.index(k)
        x = data[:,index]
        q1 = quantile
        q2 = 1.0-quantile
        q = (np.quantile(x, q1), np.quantile(x, q2))
        label = ' {} $\mu$={:.2f} $\sigma$={:.2f}'.format(k, np.mean(x), np.std(x))
        a.hist(x, nb_bins,
               # density=True,
               histtype='stepfilled',
               range=q,
               facecolor='g',
               alpha=0.9,
               label=label)
        #a.set_ylabel('Probability')
        a.set_ylabel('Counts')
        a.legend()
        i = i+1

    # remove empty plot
    phsp.fig_rm_empty_plot(len(keys), ax)

    if n == -1:
        n = m
    # plt.subplots_adjust(top=0.7)
    plt.suptitle('{} Values: {}/{}'.format(filename, n, m))
    plt.tight_layout(rect=[0, 0.03, 1, 0.95])
    plt.show()

# --------------------------------------------------------------------------
if __name__ == '__main__':
    phsp_plot()

